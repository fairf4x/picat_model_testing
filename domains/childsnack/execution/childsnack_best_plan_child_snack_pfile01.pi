import planner.
import ordset.

main([Bench]) =>
  println(Bench),
  P = Bench.to_atom(),
  time(call(P)).

pddl(IFacts,GFacts) => 
  initialize_table,
  NO_GLUTEN_SANDWICH_INIT = [S : $no_gluten_sandwich(S) in IFacts],
  AT_KITCHEN_SANDWICH_INIT = [S : $at_kitchen_sandwich(S) in IFacts],
  STATE_PRED_INIT = [S : $state_pred(S) in IFacts],
  AT_KITCHEN_CONTENT_INIT = [C : $at_kitchen_content(C) in IFacts],
  NOTEXIST_INIT = [S : $notexist(S) in IFacts],
  AT_KITCHEN_BREAD_INIT = [B : $at_kitchen_bread(B) in IFacts],
  ONTRAY_INIT = [(S,T) : $ontray(S,T) in IFacts],
  SERVED_INIT = [C : $served(C) in IFacts],
  AT_INIT = [(P,T) : $at(P,T) in IFacts],
  NO_GLUTEN_SANDWICH_GOAL = [S : $no_gluten_sandwich(S) in GFacts],
  AT_KITCHEN_SANDWICH_GOAL = [S : $at_kitchen_sandwich(S) in GFacts],
  STATE_PRED_GOAL = [S : $state_pred(S) in GFacts],
  AT_KITCHEN_CONTENT_GOAL = [C : $at_kitchen_content(C) in GFacts],
  NOTEXIST_GOAL = [S : $notexist(S) in GFacts],
  AT_KITCHEN_BREAD_GOAL = [B : $at_kitchen_bread(B) in GFacts],
  ONTRAY_GOAL = [(S,T) : $ontray(S,T) in GFacts],
  SERVED_GOAL = [C : $served(C) in GFacts],
  AT_GOAL = [(P,T) : $at(P,T) in GFacts],
  Facts = [Fact : Fact in IFacts, (
    Fact = $place(_);
    Fact = $sandwich(_);
    Fact = $bread_portion(_);
    Fact = $content_portion(_);
    Fact = $state(_);
    Fact = $tray(_);
    Fact = $child(_);
    Fact = $allergic_gluten(_);
    Fact = $no_gluten_bread(_);
    Fact = $no_gluten_content(_);
    Fact = $not_allergic_gluten(_);
    Fact = $waiting(_,_)
  )],
  cl_facts([$goal(AT_GOAL,AT_KITCHEN_BREAD_GOAL,AT_KITCHEN_CONTENT_GOAL,AT_KITCHEN_SANDWICH_GOAL,NOTEXIST_GOAL,NO_GLUTEN_SANDWICH_GOAL,ONTRAY_GOAL,SERVED_GOAL,STATE_PRED_GOAL)|Facts],[]),
  best_plan_bb($s(AT_INIT,AT_KITCHEN_BREAD_INIT,AT_KITCHEN_CONTENT_INIT,AT_KITCHEN_SANDWICH_INIT,NOTEXIST_INIT,NO_GLUTEN_SANDWICH_INIT,ONTRAY_INIT,SERVED_INIT,STATE_PRED_INIT),99999999,Plan,PlanCost),
  writeln(plan=Plan),
  writeln(cost=PlanCost).

final(s(AT,AT_KITCHEN_BREAD,AT_KITCHEN_CONTENT,AT_KITCHEN_SANDWICH,NOTEXIST,NO_GLUTEN_SANDWICH,ONTRAY,SERVED,STATE_PRED)), goal(AT_GOAL,AT_KITCHEN_BREAD_GOAL,AT_KITCHEN_CONTENT_GOAL,AT_KITCHEN_SANDWICH_GOAL,NOTEXIST_GOAL,NO_GLUTEN_SANDWICH_GOAL,ONTRAY_GOAL,SERVED_GOAL,STATE_PRED_GOAL),
 subset(AT_GOAL,AT),
 subset(AT_KITCHEN_BREAD_GOAL,AT_KITCHEN_BREAD),
 subset(AT_KITCHEN_CONTENT_GOAL,AT_KITCHEN_CONTENT),
 subset(AT_KITCHEN_SANDWICH_GOAL,AT_KITCHEN_SANDWICH),
 subset(NOTEXIST_GOAL,NOTEXIST),
 subset(NO_GLUTEN_SANDWICH_GOAL,NO_GLUTEN_SANDWICH),
 subset(ONTRAY_GOAL,ONTRAY),
 subset(SERVED_GOAL,SERVED),
 subset(STATE_PRED_GOAL,STATE_PRED)  => 
true.

action(s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED0),NextState, Action, Cost),
select((B),AT_KITCHEN_BREAD0,AT_KITCHEN_BREAD1),
select((C),AT_KITCHEN_CONTENT0,AT_KITCHEN_CONTENT1),
no_gluten_bread(B),
no_gluten_content(C),
select((S),NOTEXIST0,NOTEXIST1),
select((state0),STATE_PRED0,STATE_PRED1)
?=>
AT_KITCHEN_SANDWICH1 = insert_ordered(AT_KITCHEN_SANDWICH0,(S)),
NO_GLUTEN_SANDWICH1 = insert_ordered(NO_GLUTEN_SANDWICH0,(S)),
STATE_PRED2 = insert_ordered(STATE_PRED1,(state1)),
NextState = $s(AT0,AT_KITCHEN_BREAD1,AT_KITCHEN_CONTENT1,AT_KITCHEN_SANDWICH1,NOTEXIST1,NO_GLUTEN_SANDWICH1,ONTRAY0,SERVED0,STATE_PRED2),
Action = $act_make_sandwich_no_gluten(B,C,S),
Cost=1.


action(s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED0),NextState, Action, Cost),
select((B),AT_KITCHEN_BREAD0,AT_KITCHEN_BREAD1),
select((C),AT_KITCHEN_CONTENT0,AT_KITCHEN_CONTENT1),
select((S),NOTEXIST0,NOTEXIST1),
not (no_gluten_bread(B)),
not (no_gluten_content(C)),
select((state0),STATE_PRED0,STATE_PRED1)
?=>
AT_KITCHEN_SANDWICH1 = insert_ordered(AT_KITCHEN_SANDWICH0,(S)),
STATE_PRED2 = insert_ordered(STATE_PRED1,(state1)),
NextState = $s(AT0,AT_KITCHEN_BREAD1,AT_KITCHEN_CONTENT1,AT_KITCHEN_SANDWICH1,NOTEXIST1,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED2),
Action = $act_make_sandwich(B,C,S),
Cost=1.


action(s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED0),NextState, Action, Cost),
select((S),AT_KITCHEN_SANDWICH0,AT_KITCHEN_SANDWICH1),
member((T,kitchen),AT0),
select((state1),STATE_PRED0,STATE_PRED1)
?=>
ONTRAY1 = insert_ordered(ONTRAY0,(S,T)),
STATE_PRED2 = insert_ordered(STATE_PRED1,(state0)),
NextState = $s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH1,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY1,SERVED0,STATE_PRED2),
Action = $act_put_on_tray(S,T),
Cost=1.


action(s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED0),NextState, Action, Cost),
allergic_gluten(C),
select((S,T),ONTRAY0,ONTRAY1),
waiting(C,P),
member((S),NO_GLUTEN_SANDWICH0),
member((T,P),AT0),
member((state2),STATE_PRED0)
?=>
SERVED1 = insert_ordered(SERVED0,(C)),
NextState = $s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY1,SERVED1,STATE_PRED0),
Action = $act_serve_sandwich_no_gluten(C,P,S,T),
Cost=1.


action(s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED0),NextState, Action, Cost),
not_allergic_gluten(C),
waiting(C,P),
select((S,T),ONTRAY0,ONTRAY1),
member((T,P),AT0),
not (member((S),NO_GLUTEN_SANDWICH0)),
member((state2),STATE_PRED0)
?=>
SERVED1 = insert_ordered(SERVED0,(C)),
NextState = $s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY1,SERVED1,STATE_PRED0),
Action = $act_serve_sandwich(C,P,S,T),
Cost=1.


action(s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED0),NextState, Action, Cost),
select((T,P1),AT0,AT1),
=(P1,kitchen),
select((state0),STATE_PRED0,STATE_PRED1)
?=>
AT2 = insert_ordered(AT1,(T,P2)),
STATE_PRED2 = insert_ordered(STATE_PRED1,(state2)),
NextState = $s(AT2,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED2),
Action = $act_move_tray(P1,P2,T),
Cost=1.


action(s(AT0,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED0),NextState, Action, Cost),
select((T,P1),AT0,AT1),
=(P2,kitchen),
select((state2),STATE_PRED0,STATE_PRED1)
?=>
AT2 = insert_ordered(AT1,(T,P2)),
STATE_PRED2 = insert_ordered(STATE_PRED1,(state0)),
NextState = $s(AT2,AT_KITCHEN_BREAD0,AT_KITCHEN_CONTENT0,AT_KITCHEN_SANDWICH0,NOTEXIST0,NO_GLUTEN_SANDWICH0,ONTRAY0,SERVED0,STATE_PRED2),
Action = $act_move_tray_2(P1,P2,T),
Cost=1.
child_snack_pfile01 =>
    Init = $[
        bread_portion(bread1),
        bread_portion(bread2),
        bread_portion(bread3),
        bread_portion(bread4),
        bread_portion(bread5),
        bread_portion(bread6),
        child(child1),
        child(child2),
        child(child3),
        child(child4),
        child(child5),
        child(child6),
        content_portion(content1),
        content_portion(content2),
        content_portion(content3),
        content_portion(content4),
        content_portion(content5),
        content_portion(content6),
        sandwich(sandw1),
        sandwich(sandw2),
        sandwich(sandw3),
        sandwich(sandw4),
        sandwich(sandw5),
        sandwich(sandw6),
        sandwich(sandw7),
        sandwich(sandw8),
        place(table1),
        place(table2),
        place(table3),
        tray(tray1),
        tray(tray2),
        at(tray1,kitchen),
        at(tray2,kitchen),
        at_kitchen_bread(bread1),
        at_kitchen_bread(bread2),
        at_kitchen_bread(bread3),
        at_kitchen_bread(bread4),
        at_kitchen_bread(bread5),
        at_kitchen_bread(bread6),
        at_kitchen_content(content1),
        at_kitchen_content(content2),
        at_kitchen_content(content3),
        at_kitchen_content(content4),
        at_kitchen_content(content5),
        at_kitchen_content(content6),
        no_gluten_bread(bread4),
        no_gluten_bread(bread1),
        no_gluten_content(content6),
        no_gluten_content(content5),
        allergic_gluten(child3),
        allergic_gluten(child4),
        not_allergic_gluten(child1),
        not_allergic_gluten(child2),
        not_allergic_gluten(child5),
        not_allergic_gluten(child6),
        waiting(child1,table1),
        waiting(child2,table1),
        waiting(child3,table1),
        waiting(child4,table3),
        waiting(child5,table1),
        waiting(child6,table3),
        notexist(sandw1),
        notexist(sandw2),
        notexist(sandw3),
        notexist(sandw4),
        notexist(sandw5),
        notexist(sandw6),
        notexist(sandw7),
        notexist(sandw8)],
    Goal = $[
        served(child1),
        served(child2),
        served(child3),
        served(child4),
        served(child5),
        served(child6)],
    pddl(Init,Goal).
