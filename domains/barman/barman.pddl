(define (domain barman)
  (:requirements :strips :typing)
  (:types hand level beverage dispenser container state - object
  	  ingredient cocktail - beverage
          shot shaker - container)
  (:constants state0 state1 state2 state3 state4 state5 state6 state7 state8 state9 state10 state11 state12 state13 - state)
  (:predicates  (ontable ?c - container)
                (holding ?h - hand ?c - container)
		(handempty ?h - hand)
		(empty ?c - container)
                (contains ?c - container ?b - beverage)
                (stag_contains ?c - container ?b - beverage)
		(clean ?c - container)
                (used ?c - container ?b - beverage)
                (dispenses ?d - dispenser ?i - ingredient)
		(shaker_empty_level ?s - shaker ?l - level)
		(shaker_level ?s - shaker ?l - level)
		(next ?l1 ?l2 - level)
		(unshaked ?s - shaker)
		(shaked ?s - shaker)
                (cocktail_part1 ?c - cocktail ?i - ingredient)
                (cocktail_part2 ?c - cocktail ?i - ingredient)
                (state_pred ?s - state)
                )
		
  (:action grasp_shot
             :parameters (?h - hand ?c - shot)
             :precondition (and (ontable ?c) (handempty ?h)(state_pred state0))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
			  (not (state_pred state0))
                          (state_pred state1)
                          ))

  (:action leave_shot
             :parameters (?h - hand ?c - shot)
             :precondition (and (holding ?h ?c)(state_pred state6))
             :effect (and (not (holding ?h ?c))
	     	     	  (handempty ?h)
			  (ontable ?c)
                          (not (state_pred state6))
                          (state_pred state7)))
  (:action leave_shot_g
             :parameters (?h - hand ?c - shot)
             :precondition (and (holding ?h ?c)(state_pred state13))
             :effect (and (not (holding ?h ?c))
	     	     	  (handempty ?h)
			  (ontable ?c)
                          (not (state_pred state13))
                          (state_pred state0)))
 
  (:action grasp_shaker
             :parameters (?h - hand ?c - shaker)
             :precondition (and (ontable ?c) (handempty ?h)(state_pred state7))
             :effect (and (not (ontable ?c))
	     	     	  (not (handempty ?h))
			  (holding ?h ?c)
                          (not (state_pred state7))
                          (state_pred state8)))

  (:action leave_shaker
             :parameters (?h - hand ?c - shaker)
             :precondition (and (holding ?h ?c)(state_pred state12))
             :effect (and (not (holding ?h ?c))
	     	     	  (handempty ?h)
			  (ontable ?c)
                          (not (state_pred state12))
                          (state_pred state0)))
 
  (:action fill_shot
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser ?b - cocktail)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (clean ?s)
                              (cocktail_part1 ?b ?i)
                              (stag_contains ?s ?b)
                               (state_pred state1))
           :effect (and (not (empty ?s))
	   	   	(contains ?s ?i)
	   	   	(not (clean ?s))
			(used ?s ?i)
                        (not (state_pred state1))
                        (state_pred state2)))


  (:action refill_shot
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser ?b - cocktail)
           :precondition (and (holding ?h1 ?s)	   		      
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (used ?s ?i)
                              (cocktail_part1 ?b ?i)
                              (stag_contains ?s ?b)
                              (state_pred state1))
           :effect (and (not (empty ?s))
                        (contains ?s ?i)
                        (not (state_pred state1))
                        (state_pred state2)))
 
  (:action fill_shot_g
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (clean ?s)
                              (stag_contains ?s ?i)
                               (state_pred state1))
           :effect (and (not (empty ?s))
	   	   	(contains ?s ?i)
                        (not (stag_contains ?s ?i))
	   	   	(not (clean ?s))
			(used ?s ?i)
                        (not (state_pred state1))
                        (state_pred state13)))


  (:action refill_shot_g
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser)
           :precondition (and (holding ?h1 ?s)	   		      
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (used ?s ?i)
                              (stag_contains ?s ?i)
                              (state_pred state1))
           :effect (and (not (empty ?s))
                        (contains ?s ?i)
                        (not (stag_contains ?s ?i))
                        (not (state_pred state1))
                        (state_pred state13)))

  (:action fill_shot_2
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser ?b - cocktail)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (clean ?s)
                              (cocktail_part2 ?b ?i)
                              (stag_contains ?s ?b)
                               (state_pred state4))
           :effect (and (not (empty ?s))
	   	   	(contains ?s ?i)
	   	   	(not (clean ?s))
			(used ?s ?i)
                         (not (state_pred state4))
                        (state_pred state5)))


  (:action refill_shot_2
           :parameters (?s - shot ?i - ingredient ?h1 ?h2 - hand ?d - dispenser ?b - cocktail)
           :precondition (and (holding ?h1 ?s)	   		      
                              (handempty ?h2)
	   		      (dispenses ?d ?i)
                              (empty ?s)
			      (used ?s ?i)
                              (cocktail_part2 ?b ?i)
                              (stag_contains ?s ?b)
                              (state_pred state3))
           :effect (and (not (empty ?s))
                        (contains ?s ?i)
                        (not (state_pred state3))
                        (state_pred state5)))


 ; (:action empty-shot
 ;          :parameters (?h - hand ?p - shot ?b - beverage)
 ;          :precondition (and (holding ?h ?p)
 ;                             (contains ?p ?b))
 ;          :effect (and (not (contains ?p ?b))
 ;	   	   	(empty ?p)))

  (:action clean_shot
  	   :parameters (?s - shot ?b - beverage ?h1 ?h2 - hand)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)	   		      
			      (empty ?s)
                              (used ?s ?b)
                               (state_pred state1))
           :effect (and (not (used ?s ?b))
	   	   	(clean ?s)))

  (:action clean_shot_2
  	   :parameters (?s - shot ?b - beverage ?h1 ?h2 - hand)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)	   		      
			      (empty ?s)
                              (used ?s ?b)
                              (state_pred state3))
           :effect (and (not (used ?s ?b))
	   	   	(clean ?s)
                        (not (state_pred state3))
                        (state_pred state4)))

  (:action clean_shot_3
  	   :parameters (?s - shot ?b - beverage ?h1 ?h2 - hand)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)	   		      
			      (empty ?s)
                              (used ?s ?b)
                               (state_pred state6))
           :effect (and (not (used ?s ?b))
	   	   	(clean ?s)))


  (:action pour_shot_to_clean_shaker
           :parameters (?s - shot ?i - ingredient ?d - shaker ?h1 - hand ?l ?l1 - level)
           :precondition (and (holding ?h1 ?s)
			      (contains ?s ?i)
                              (empty ?d)
	   		      (clean ?d)                              
                              (shaker_level ?d ?l)
                              (next ?l ?l1)
                              (state_pred state2))
           :effect (and (not (contains ?s ?i))
	   	   	(empty ?s)
			(contains ?d ?i)
                        (not (empty ?d))
			(not (clean ?d))
			(unshaked ?d)
			(not (shaker_level ?d ?l))
			(shaker_level ?d ?l1)
                        (not (state_pred state2))
                        (state_pred state3)))


  (:action pour_shot_to_used_shaker
           :parameters (?s - shot ?i - ingredient ?d - shaker ?h1 - hand ?l ?l1 - level)
           :precondition (and (holding ?h1 ?s)
			      (contains ?s ?i)
                              (unshaked ?d)
                              (shaker_level ?d ?l)
                              (next ?l ?l1)
                              (state_pred state5))
           :effect (and (not (contains ?s ?i))
                        (contains ?d ?i)
	   	   	(empty ?s)     
  			(not (shaker_level ?d ?l))
			(shaker_level ?d ?l1)
                        (not (state_pred state5))
                        (state_pred state6)))

  (:action empty_shaker
           :parameters (?h - hand ?s - shaker ?b - cocktail ?l ?l1 - level)
           :precondition (and (holding ?h ?s)
                              (contains ?s ?b)
			      (shaked ?s)
			      (shaker_level ?s ?l)
			      (shaker_empty_level ?s ?l1)
                              (state_pred state10))
           :effect (and (not (shaked ?s))
	   	   	(not (shaker_level ?s ?l))
	   	   	(shaker_level ?s ?l1)
			(not (contains ?s ?b))
	   	   	(empty ?s)
                        (not (state_pred state10))
                        (state_pred state11)))

  (:action clean_shaker
  	   :parameters (?h1 ?h2 - hand ?s - shaker)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
                              (empty ?s)
                              (state_pred state11))
           :effect (and (clean ?s)(not (state_pred state11))(state_pred state12)))
  
  (:action shake
  	   :parameters (?b - cocktail ?d1 ?d2 - ingredient ?s - shaker ?h1 ?h2 - hand)
           :precondition (and (holding ?h1 ?s)
                              (handempty ?h2)
			      (contains ?s ?d1)
                              (contains ?s ?d2)
                              (cocktail_part1 ?b ?d1)
			      (cocktail_part2 ?b ?d2)
			      (unshaked ?s)
                              (state_pred state8))			      
           :effect (and (not (unshaked ?s))
		        (not (contains ?s ?d1))
                        (not (contains ?s ?d2))
	   	   	(shaked ?s)
                        (contains ?s ?b)
                        (not (state_pred state8))
                        (state_pred state9)))

  (:action pour_shaker_to_shot
           :parameters (?b - beverage ?d - shot ?h - hand ?s - shaker ?l ?l1 - level)
           :precondition (and (holding ?h ?s)
			      (shaked ?s)
			      (empty ?d)
			      (clean ?d)
			      (contains ?s ?b)
                              (shaker_level ?s ?l)
                              (next ?l1 ?l)
                              (state_pred state9))
           :effect (and (not (clean ?d))
	   	   	(not (empty ?d))
                        (contains ?d ?b)
                        (not (stag_contains ?s ?b))
			(shaker_level ?s ?l1)
			(not (shaker_level ?s ?l))
                        (not (state_pred state9))
                        (state_pred state10)))
 )
